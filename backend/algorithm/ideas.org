


So far , we are only counting contniguous locations for utility value. But we should also consider blocked count.


If the final state blocks opponent moves, then it should have higher utility value.

For a given a i,j --> we will count its surrounding to see how many it blocked.

* Debug
It seems our utltiy function is not working properly as it is always returning 0. Lets fix it.

1. Check the pattern set each time by running it separately
 #+begin_src javascript
   const patterns = [
		board[row].slice(col, col + 5).join(''), // Horizontal
		board.map(row => row[col]).slice(row, row + 5).join(''), // Vertical
		board.slice(row, row + 5).map((row, i) => row[col + i]).join(''), // Diagonal (top-left to bottom-right)
		board.slice(row, row + 5).map((row, i) => row[col - i]).join('') // Diagonal (top-right to bottom-left)
	    ];

 #+end_src

 #+begin_src javascript
   const board = [
  ['-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-'],
  ['-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-'],
  ['-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-'],
  ['-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-'],
  ['-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-'],
  ['-', '-', '-', '-', '-', '-', '-', 'b', '-', '-', '-', '-', '-', '-', '-'],
  ['-', '-', '-', '-', '-', '-', '-', 'b', '-', '-', '-', '-', '-', '-', '-'],
  ['-', '-', '-', '-', '-', '-', '-', 'b', 'w', '-', '-', '-', '-', '-', '-'],
  ['-', '-', '-', '-', '-', '-', 'w', '-', '-', '-', '-', '-', '-', '-', '-'],
  ['-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-'],
  ['-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-'],
  ['-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-'],
  ['-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-'],
  ['-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-'],
  ['-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-']
];

 #+end_src

* temp
#+begin_src javascript
  
const defensive_move = {
        'wwwwb': 1000000,   // Winning pattern for white
        'bbbbw': 1000000,   // Winning pattern for black

        // Potential winning patterns
        'wwwbw': 10000,     // Potential winning pattern for white
        'bbbwb': 10000,     // Potential winning pattern for black
        'bwww': 10000,      // Potential winning pattern for white
        'wbbb': 10000,      // Potential winning pattern for black

        // Open fours
        'www-b': 1000,      // Open four for white
        'wwwb-': 1000,      // Open four for white
        'bbb-w': 1000,      // Open four for black
        'bbbw-': 1000,      // Open four for black
        'b-www': 1000,      // Open four for white
        '-bwww': 1000,      // Open four for white
        'w-bbb': 1000,      // Open four for black
        '-wbbb': 1000,      // Open four for black

        // Double threes
        'wwbww': 1000,      // Double threes for white
        'bbwbb': 1000,      // Double threes for black

        // Three with one open end
        'wbww-w': 500,      // Three with one open end for white
        'w-wwbw': 500,      // Three with one open end for white
        'bwbb-b': 500,      // Three with one open end for black
        'b-bbwb': 500,      // Three with one open end for black

        // Double twos
        'bww-w-': 100,      // Double twos for white
        '-wwbw-': 100,      // Double twos for white
        '-ww-wb': 100,      // Double twos for white
        'wbb-b-': 100,      // Double twos for black
        '-bbwb-': 100,      // Double twos for black
        '-bb-bw': 100,      // Double twos for black

        // Two with one open end
        'wwbw-': 100,       // Two with one open end for white
        'ww-wb': 100,       // Two with one open end for white
        'bbwb-': 100,       // Two with one open end for black
        'bb-bw': 100,       // Two with one open end for black
        'bw-ww': 100,       // Two with one open end for white
        '-wbww': 100,       // Two with one open end for white
        'wb-bb': 100,       // Two with one open end for black
        '-bwbb': 100,       // Two with one open end for black

        // Liveruns (One stone with open ends)
        'wb-w': 10,         // Liverun for white
        'w-bw': 10,         // Liverun for white
        'bw-b': 10,         // Liverun for black
        'b-wb': 10,         // Liverun for black

        // Deada (One stone with closed ends)
        'wbw': 1,           // Deada for white
        'bwb': 1            // Deada for black
}
#+end_src
